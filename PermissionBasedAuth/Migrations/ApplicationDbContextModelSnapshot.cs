// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PermissionBasedAuth.Context;

#nullable disable

namespace PermissionBasedAuth.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PermissionBasedAuth.Domain.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsSystemPermission")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "create",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "permissions.create"
                        },
                        new
                        {
                            Id = 2,
                            Action = "read",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "permissions.read"
                        },
                        new
                        {
                            Id = 3,
                            Action = "update",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "permissions.update"
                        },
                        new
                        {
                            Id = 4,
                            Action = "delete",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "permissions.delete"
                        },
                        new
                        {
                            Id = 5,
                            Action = "create",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "roles.create"
                        },
                        new
                        {
                            Id = 6,
                            Action = "read",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "roles.read"
                        },
                        new
                        {
                            Id = 7,
                            Action = "update",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "roles.update"
                        },
                        new
                        {
                            Id = 8,
                            Action = "delete",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "roles.delete"
                        },
                        new
                        {
                            Id = 9,
                            Action = "create",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "users.create"
                        },
                        new
                        {
                            Id = 10,
                            Action = "read",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "users.read"
                        },
                        new
                        {
                            Id = 11,
                            Action = "update",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "users.update"
                        },
                        new
                        {
                            Id = 12,
                            Action = "delete",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "users.delete"
                        },
                        new
                        {
                            Id = 13,
                            Action = "manage",
                            IsSystemPermission = true,
                            Module = "System",
                            Name = "users.manage"
                        },
                        new
                        {
                            Id = 14,
                            Action = "create",
                            IsSystemPermission = false,
                            Module = "Categories",
                            Name = "Categories.create"
                        },
                        new
                        {
                            Id = 15,
                            Action = "read",
                            IsSystemPermission = false,
                            Module = "Categories",
                            Name = "Categories.read"
                        },
                        new
                        {
                            Id = 16,
                            Action = "update",
                            IsSystemPermission = false,
                            Module = "Categories",
                            Name = "Categories.update"
                        },
                        new
                        {
                            Id = 17,
                            Action = "delete",
                            IsSystemPermission = false,
                            Module = "Categories",
                            Name = "Categories.delete"
                        },
                        new
                        {
                            Id = 18,
                            Action = "create",
                            IsSystemPermission = false,
                            Module = "Products",
                            Name = "Products.create"
                        },
                        new
                        {
                            Id = 19,
                            Action = "read",
                            IsSystemPermission = false,
                            Module = "Products",
                            Name = "Products.read"
                        },
                        new
                        {
                            Id = 20,
                            Action = "update",
                            IsSystemPermission = false,
                            Module = "Products",
                            Name = "Products.update"
                        },
                        new
                        {
                            Id = 21,
                            Action = "delete",
                            IsSystemPermission = false,
                            Module = "Products",
                            Name = "Products.delete"
                        },
                        new
                        {
                            Id = 22,
                            Action = "create",
                            IsSystemPermission = false,
                            Module = "Orders",
                            Name = "Orders.create"
                        },
                        new
                        {
                            Id = 23,
                            Action = "read",
                            IsSystemPermission = false,
                            Module = "Orders",
                            Name = "Orders.read"
                        },
                        new
                        {
                            Id = 24,
                            Action = "update",
                            IsSystemPermission = false,
                            Module = "Orders",
                            Name = "Orders.update"
                        },
                        new
                        {
                            Id = 25,
                            Action = "delete",
                            IsSystemPermission = false,
                            Module = "Orders",
                            Name = "Orders.delete"
                        },
                        new
                        {
                            Id = 26,
                            Action = "create",
                            IsSystemPermission = false,
                            Module = "Suppliers",
                            Name = "Suppliers.create"
                        },
                        new
                        {
                            Id = 27,
                            Action = "read",
                            IsSystemPermission = false,
                            Module = "Suppliers",
                            Name = "Suppliers.read"
                        },
                        new
                        {
                            Id = 28,
                            Action = "update",
                            IsSystemPermission = false,
                            Module = "Suppliers",
                            Name = "Suppliers.update"
                        },
                        new
                        {
                            Id = 29,
                            Action = "delete",
                            IsSystemPermission = false,
                            Module = "Suppliers",
                            Name = "Suppliers.delete"
                        },
                        new
                        {
                            Id = 30,
                            Action = "create",
                            IsSystemPermission = false,
                            Module = "Reports",
                            Name = "Reports.create"
                        },
                        new
                        {
                            Id = 31,
                            Action = "read",
                            IsSystemPermission = false,
                            Module = "Reports",
                            Name = "Reports.read"
                        },
                        new
                        {
                            Id = 32,
                            Action = "update",
                            IsSystemPermission = false,
                            Module = "Reports",
                            Name = "Reports.update"
                        },
                        new
                        {
                            Id = 33,
                            Action = "delete",
                            IsSystemPermission = false,
                            Module = "Reports",
                            Name = "Reports.delete"
                        },
                        new
                        {
                            Id = 34,
                            Action = "create",
                            IsSystemPermission = false,
                            Module = "Settings",
                            Name = "Settings.create"
                        },
                        new
                        {
                            Id = 35,
                            Action = "read",
                            IsSystemPermission = false,
                            Module = "Settings",
                            Name = "Settings.read"
                        },
                        new
                        {
                            Id = 36,
                            Action = "update",
                            IsSystemPermission = false,
                            Module = "Settings",
                            Name = "Settings.update"
                        },
                        new
                        {
                            Id = 37,
                            Action = "delete",
                            IsSystemPermission = false,
                            Module = "Settings",
                            Name = "Settings.delete"
                        });
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsSystemRole = true,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsSystemRole = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsSystemRole = false,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            IsSystemRole = false,
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13
                        });
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "superadmin@system.com",
                            IsActive = true,
                            PasswordHash = "1234Super",
                            Username = "superadmin"
                        });
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.UserPermission", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.RolePermission", b =>
                {
                    b.HasOne("PermissionBasedAuth.Domain.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PermissionBasedAuth.Domain.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.UserPermission", b =>
                {
                    b.HasOne("PermissionBasedAuth.Domain.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PermissionBasedAuth.Domain.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.UserRole", b =>
                {
                    b.HasOne("PermissionBasedAuth.Domain.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PermissionBasedAuth.Domain.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("PermissionBasedAuth.Domain.User", b =>
                {
                    b.Navigation("UserPermissions");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
